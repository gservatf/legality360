$ grep -r "authService" src/ --include="*.tsx" --include="*.ts" | grep -v node_modules
src/App.tsx:import { authService } from '@/lib/auth';
src/App.tsx:        await authService.initialize();
src/App.tsx:        const user = authService.getCurrentUser();
src/App.tsx:        const profile = authService.getCurrentProfile();
src/App.tsx:            const refreshedProfile = await authService.refreshProfile();
src/App.tsx:        const user = authService.getCurrentUser();
src/App.tsx:        const profile = authService.getCurrentProfile();
src/App.tsx:        const refreshedProfile = await authService.refreshProfile();
src/App.tsx:      await authService.signOut();
src/components/auth/LoginForm.tsx:import { authService } from '@/lib/auth';
src/components/auth/LoginForm.tsx:    const result = await authService.login(email, password);
src/components/client/ClientPanel.tsx:import { authService } from '@/lib/auth'
src/components/client/ClientPanel.tsx:  const currentUser = authService.getCurrentProfile()
src/components/client/ClientPanel.tsx:  if (!authService.canAccessClientPanel()) {
src/components/dashboard/Chat.tsx:import { authService } from '@/lib/auth';
src/components/dashboard/Chat.tsx:  const clientId = authService.getCurrentClientId();
src/components/dashboard/Chat.tsx:        sender_name: authService.getCurrentUser()?.nombre || 'Cliente',
src/components/dashboard/ClientAccount.tsx:import { authService } from '@/lib/auth';
src/components/dashboard/ClientAccount.tsx:  const clientId = authService.getCurrentClientId();
src/components/dashboard/CollaboratorManager.tsx:import { authService } from '@/lib/auth';
src/components/dashboard/CollaboratorManager.tsx:  const clientId = authService.getCurrentClientId();
src/components/dashboard/DriveIntegration.tsx:import { authService } from '@/lib/auth';
src/components/dashboard/DriveIntegration.tsx:  const clientId = authService.getCurrentClientId();
src/components/dashboard/NewTaskModal.tsx:import { authService } from '@/lib/auth';
src/components/dashboard/NewTaskModal.tsx:  const clientId = authService.getCurrentClientId();
src/components/dashboard/NewTaskModal.tsx:  const currentUser = authService.getCurrentUser();
src/components/dashboard/Reports.tsx:import { authService } from '@/lib/auth';
src/components/dashboard/Reports.tsx:  const clientId = authService.getCurrentClientId();
src/components/dashboard/RiskMatrix.tsx:import { authService } from '@/lib/auth';
src/components/dashboard/RiskMatrix.tsx:  const clientId = authService.getCurrentClientId();
src/components/dashboard/TaskChatModal.tsx:import { authService } from '@/lib/auth';
src/components/dashboard/TaskChatModal.tsx:  const currentUser = authService.getCurrentUser();
src/components/dashboard/TaskEditModal.tsx:import { authService } from '@/lib/auth';
src/components/dashboard/TaskEditModal.tsx:  const clientId = authService.getCurrentClientId();
src/components/dashboard/TaskKanban.tsx:import { authService } from '@/lib/auth';
src/components/dashboard/TaskKanban.tsx:  const clientId = authService.getCurrentClientId();
src/components/dashboard/TaskKanban.tsx:  const currentUser = authService.getCurrentUser();
src/components/layout/Header.tsx:import { authService } from '@/lib/auth';
src/components/layout/Header.tsx:  const user = authService.getCurrentUser();
src/components/layout/Header.tsx:    authService.logout();
src/lib/supabaseService.ts:import { authService } from './auth'
src/pages/Dashboard.tsx:import { authService } from '@/lib/auth';
src/pages/Dashboard.tsx:  const clientId = authService.getCurrentClientId();
